<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="https://brakemanscanner.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://brakemanscanner.org/" rel="alternate" type="text/html" /><updated>2020-12-26T19:22:13-08:00</updated><id>https://brakemanscanner.org/feed.xml</id><title type="html">Brakeman</title><entry><title type="html">Brakeman 4.10.1 Released</title><link href="https://brakemanscanner.org/blog/2020/12/24/brakeman-4-dot-10-dot-1-released" rel="alternate" type="text/html" title="Brakeman 4.10.1 Released" /><published>2020-12-24T12:30:00-08:00</published><updated>2020-12-24T12:30:00-08:00</updated><id>https://brakemanscanner.org/blog/2020/12/24/brakeman-4-dot-10-dot-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/12/24/brakeman-4-dot-10-dot-1-released">&lt;p&gt;This releases fixes Ruby 3.0 compatibility (meaning running under 3.0, new syntax is not supported yet).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.10.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Declare REXML as a dependency (Ruby 3.0 compatibility)&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#sexp_body&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#[..]&lt;/code&gt; (Ruby 3.0 compatibility)&lt;/li&gt;
  &lt;li&gt;Prevent render loops when template names are absolute paths (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1536&quot;&gt;#1536&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ensure RubyParser is passed file path as a String (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1534&quot;&gt;#1534&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Support new Haml 5.2.0 escaping method (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1517&quot;&gt;#1517&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rexml-as-an-explicit-dependency&quot;&gt;REXML as an Explicit Dependency&lt;/h3&gt;

&lt;p&gt;In Ruby 3.0, REXML has become a ‘bundled’ gem. It is distributed with Ruby, but if Bundler is involved then it needs to be declared as an explicit dependency.&lt;/p&gt;

&lt;p&gt;If you like minimal dependencies, you can always use the &lt;code class=&quot;highlighter-rouge&quot;&gt;brakeman-min&lt;/code&gt; gem which declares only strict dependencies.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1538&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;avoid-slicing-with-sexp&quot;&gt;Avoid Slicing with Sexp#[]&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp&lt;/code&gt; subclasses from &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; no longer returns subclasses from methods that create new arrays.&lt;/p&gt;

&lt;p&gt;Brakeman was unfortunately using &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#[]&lt;/code&gt; with ranges (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;s(:a, :b, :c)[1..-1]&lt;/code&gt;), which runs into this behavior.
Happily, the &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#sexp_body&lt;/code&gt; method already exists to properly slice and return a &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1538&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;recursive-renders-with-absolute-paths&quot;&gt;Recursive Renders with Absolute Paths&lt;/h3&gt;

&lt;p&gt;Brakeman has long been able to detect recursive render loops, but that detection did not work if the partial name was an ‘absolute’ path.&lt;/p&gt;

&lt;p&gt;This is now fixed!&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1537&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;ensure-rubyparser-path-is-a-string&quot;&gt;Ensure RubyParser Path is a String&lt;/h3&gt;

&lt;p&gt;In some cases, the parser was given a &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FilePath&lt;/code&gt; for the file name.
This only caused an issue in some weird corner cases, but it was wrong nonetheless.&lt;/p&gt;

&lt;p&gt;Now &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FileParser&lt;/code&gt; will ensure the file name is passed as a string.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1535&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;support-haml-52&quot;&gt;Support Haml 5.2&lt;/h3&gt;

&lt;p&gt;Haml 5.2.0 introduced a new method for escaping output, which caused some false positives.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note this was avoided in Brakeman 4.10.0 by bundling an earlier version of Haml.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1518&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;e40451080554884a63d73a2933c36518a3cf7a2bb471e6d864ce39a9d3455c98  brakeman-4.10.1.gem
ec69e04e087b74862629e952d7817dd7b73e30810166e01d69d24d7164101455  brakeman-lib-4.10.1.gem
3deee68eadd8eb6850254a8e753d6bbe933194c883f12a2455bdf5fd97b1eba2  brakeman-min-4.10.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This releases fixes Ruby 3.0 compatibility (meaning running under 3.0, new syntax is not supported yet).</summary></entry><entry><title type="html">Brakeman 4.10.0 Released</title><link href="https://brakemanscanner.org/blog/2020/09/28/brakeman-4-dot-10-dot-0-released" rel="alternate" type="text/html" title="Brakeman 4.10.0 Released" /><published>2020-09-28T12:30:00-07:00</published><updated>2020-09-28T12:30:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/09/28/brakeman-4-dot-10-dot-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/09/28/brakeman-4-dot-10-dot-0-released">&lt;p&gt;This release introduces a new report format!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.9.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add SARIF report format (&lt;a href=&quot;https://github.com/swinton&quot;&gt;Steve Winton&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sarif-report-format&quot;&gt;SARIF Report Format&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/swinton&quot;&gt;Steve Winton&lt;/a&gt; from GitHub has contributed support for &lt;a href=&quot;https://sarifweb.azurewebsites.net/&quot;&gt;Static Analysis Results Interchange Format (SARIF)&lt;/a&gt;.
This is a standard format for static analysis tools and can be consumed by some report viewers, such as &lt;a href=&quot;https://github.com/Microsoft/sarif-vscode-extension/&quot;&gt;this one for Visual Studio Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To output a SARIF report, use &lt;code class=&quot;highlighter-rouge&quot;&gt;-f sarif&lt;/code&gt; or a file name like &lt;code class=&quot;highlighter-rouge&quot;&gt;-o report.sarif&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1500&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;previewing-brakeman-50&quot;&gt;Previewing Brakeman 5.0&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;What is planned for Brakeman 5.0?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The big change coming in 5.0 is scanning &lt;em&gt;way&lt;/em&gt; more files. Currently, Brakeman scans specific directories in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;config/&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;engines/&lt;/code&gt;.
It also only looks for files in particular places - e.g. views will be somewhere in &lt;code class=&quot;highlighter-rouge&quot;&gt;app/**/views&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In 5.0, Brakeman will scan (almost) all files in the project directory with &lt;code class=&quot;highlighter-rouge&quot;&gt;.rb&lt;/code&gt; or template-related extensions.
This will dramatically increase the scope of Brakeman scans, which is better coverage but at the cost of more false positives and slower scans.&lt;/p&gt;

&lt;p&gt;Also expected in Brakeman 5.0 is a bump of minimum Ruby version to 2.4.0 (which is already EOL).&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7bef7df71137d06be5fc3325ead57f8ce35be7691bf6dd389228461d731b79dd  brakeman-4.10.0.gem
698b8eb02cdea7a6e407192c261c61d8fc6cd24d590a1b388defc9de17966119  brakeman-lib-4.10.0.gem
64bb565ee84b9a9646985e456db1125ff9fb884ca83de6ba6fbc2c63bdbc8de9  brakeman-min-4.10.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release introduces a new report format!</summary></entry><entry><title type="html">Brakeman 4.9.1 Released</title><link href="https://brakemanscanner.org/blog/2020/09/04/brakeman-4-dot-9-dot-1-released" rel="alternate" type="text/html" title="Brakeman 4.9.1 Released" /><published>2020-09-04T12:30:00-07:00</published><updated>2020-09-04T12:30:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/09/04/brakeman-4-dot-9-dot-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/09/04/brakeman-4-dot-9-dot-1-released">&lt;p&gt;This release was prompted by the release of &lt;a href=&quot;https://www.zenspider.com/releases/2020/08/ruby_parser-version-3-15-0-has-been-released.html&quot;&gt;ruby_parser 3.15.0&lt;/a&gt;, which includes a &lt;em&gt;lot&lt;/em&gt; of fixes and improvements, including support for some Ruby 2.7 syntax.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.9.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use version from &lt;code class=&quot;highlighter-rouge&quot;&gt;active_record&lt;/code&gt; for non-Rails apps (&lt;a href=&quot;https://github.com/BuonOmo&quot;&gt;Ulysse Buonomo&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Check &lt;code class=&quot;highlighter-rouge&quot;&gt;chomp&lt;/code&gt;ed strings for SQL injection (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1509&quot;&gt;#1509&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Always set line number for joined arrays (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1499&quot;&gt;#1499&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Avoid warning about missing &lt;code class=&quot;highlighter-rouge&quot;&gt;attr_accessible&lt;/code&gt; if &lt;code class=&quot;highlighter-rouge&quot;&gt;protected_attributes&lt;/code&gt; gem is used (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1512&quot;&gt;#1512&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;check-activerecord-version&quot;&gt;Check ActiveRecord Version&lt;/h3&gt;

&lt;p&gt;For non-Rails applications that are using ActiveRecord, use the version of &lt;code class=&quot;highlighter-rouge&quot;&gt;active_record&lt;/code&gt; to set Brakeman’s guess at a Rails version. Thanks to &lt;a href=&quot;https://github.com/BuonOmo&quot;&gt;Ulysse Buonomo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: It is not recommended to run Brakeman on non-Rails applications… but no one is going to stop you if you want really to.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1506&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;sql-injection-with-chomp&quot;&gt;SQL Injection with Chomp&lt;/h3&gt;

&lt;p&gt;Brakeman will now check for string interpolation inside strings that have &lt;code class=&quot;highlighter-rouge&quot;&gt;chomp&lt;/code&gt; called on them.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1511&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;joined-arrays-line-number&quot;&gt;Joined Arrays Line Number&lt;/h3&gt;

&lt;p&gt;Fixed a small, unlikely bug where joining two arrays where Brakeman doesn’t have a line number for either of them would raise an exception.
Not really sure how that happens, though.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1503&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;protected-attributes&quot;&gt;Protected Attributes&lt;/h3&gt;

&lt;p&gt;When using the &lt;code class=&quot;highlighter-rouge&quot;&gt;protected_attributes&lt;/code&gt; gem, it is allowed but not required to set &lt;code class=&quot;highlighter-rouge&quot;&gt;attr_accessible&lt;/code&gt; on models.&lt;/p&gt;

&lt;p&gt;Brakeman will no longer warn about missing &lt;code class=&quot;highlighter-rouge&quot;&gt;attr_accessible&lt;/code&gt; when &lt;code class=&quot;highlighter-rouge&quot;&gt;protected_attributes&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1513&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;update-rubyparser&quot;&gt;Update RubyParser&lt;/h3&gt;

&lt;p&gt;As noted above, this version of Brakeman ships with an updated version of ruby_parser.&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5a17706b1da4886f1b6864c3ffff1ab40684f3f7b4d667138227c467ebccb0f7  brakeman-4.9.1.gem
8bb3d88f9786e9f08c24d38e88c40adf02f4a47b17de8c1c816f7e174de476a4  brakeman-lib-4.9.1.gem
8eae3eec1ebab0cf3b29ea50089f613b0d8e544ae4c332f1f5e64a240e8a0a94  brakeman-min-4.9.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release was prompted by the release of ruby_parser 3.15.0, which includes a lot of fixes and improvements, including support for some Ruby 2.7 syntax.</summary></entry><entry><title type="html">Brakeman Turns Ten!</title><link href="https://brakemanscanner.org/blog/2020/08/27/brakeman-turns-10" rel="alternate" type="text/html" title="Brakeman Turns Ten!" /><published>2020-08-27T08:10:00-07:00</published><updated>2020-08-27T08:10:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/08/27/brakeman-turns-10</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/08/27/brakeman-turns-10">&lt;p&gt;Hi! &lt;a href=&quot;https://twitter.com/presidentbeef&quot;&gt;Justin Collins&lt;/a&gt; here with a rare non-release-related Brakeman post.&lt;/p&gt;

&lt;p&gt;On August 27, 2010 (&lt;em&gt;two days before Rails 3.0!&lt;/em&gt;), I released the &lt;a href=&quot;https://rubygems.org/gems/brakeman/versions/0.0.2&quot;&gt;first public version&lt;/a&gt; of my summer intern project at AT&amp;amp;T Interactive: a static analysis security tool for Ruby on Rails called “Brakeman”.&lt;/p&gt;

&lt;p&gt;Brakeman was intended to be a stop-gap solution until commercial products started supporting Ruby. I had no idea it would take me on such a wild journey nor did I think I would still be maintaining it ten years later.&lt;/p&gt;

&lt;p&gt;In the past ten years, Brakeman has had:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubygems.org/gems/brakeman&quot;&gt;33+ million gem downloads&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/network/dependents?package_id=UGFja2FnZS0yMzgzMw%3D%3D&quot;&gt;Over 9,000 dependent GitHub repos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/releases&quot;&gt;120 releases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/graphs/contributors&quot;&gt;100+ contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am extremely grateful to everyone who has contributed to this journey: those who took chances on me, those who supported and promoted Brakeman, those who have contributed time and code to Brakeman, those who reported bugs and suggested improvements, and everyone who has used Brakeman to make their applications safer!&lt;/p&gt;

&lt;p&gt;Very special thanks to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/tinzaw/&quot;&gt;Tin Zaw&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.zenspider.com/&quot;&gt;Ryan Davis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/ndm&quot;&gt;Neil Matatall&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://manicode.com/&quot;&gt;Jim Manico&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://alexsmolen.com/&quot;&gt;Alex Smolen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/cktricky&quot;&gt;Ken Johnson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want some Brakeman FAQ nuggets? You got it!&lt;/p&gt;

&lt;h3 id=&quot;where-did-the-idea-for-brakeman-come-from&quot;&gt;Where did the idea for Brakeman come from?&lt;/h3&gt;

&lt;p&gt;I recall during my internship interview at AT&amp;amp;T Interactive, we were talking about cross-site scripting. I distinctly recall saying, “What if we had a tool that looked at the inputs and outputs of an application and found cross-site scripting?” The response was an excited “Do you know of a tool like that for Ruby?” To which I replied, “No, but I’m sure it wouldn’t be that hard to build!” This idea was later pitched back to me as a possible internship project.&lt;/p&gt;

&lt;p&gt;By the way, that’s still not how Brakeman works, but it was originally designed to find cross-site scripting.&lt;/p&gt;

&lt;h3 id=&quot;who-came-up-with-the-name-brakeman&quot;&gt;Who came up with the name “Brakeman”?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/carlivar/&quot;&gt;Carl Johnson&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/tatsuya-murase-a8061/&quot;&gt;Tatsuya Murase&lt;/a&gt; on the security team at AT&amp;amp;T Interactive were way more into trains than me, and they suggested the name. There were a couple other candidates, but I thought “Brakeman” had a snappy sound to it and was unique.&lt;/p&gt;

&lt;h3 id=&quot;was-brakeman-your-phd-research&quot;&gt;Was Brakeman your PhD research?&lt;/h3&gt;

&lt;p&gt;Nope, unrelated. However, Brakeman was released exactly at the midpoint of my PhD career.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://escholarship.org/uc/item/8md1h50q&quot;&gt;Here is my dissertation&lt;/a&gt; for those interested few.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-up-with-the-brakeman-logo&quot;&gt;What is up with the Brakeman logo?&lt;/h3&gt;

&lt;p&gt;It’s a &lt;a href=&quot;https://www.google.com/search?source=univ&amp;amp;tbm=isch&amp;amp;q=brakeman+lantern&quot;&gt;brakeman lantern&lt;/a&gt; and was designed by &lt;a href=&quot;http://www.nell-ux.com/&quot;&gt;Janelle Lawless&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;do-you-still-maintain-brakeman-who-owns-it&quot;&gt;Do you still maintain Brakeman? Who owns it?&lt;/h3&gt;

&lt;p&gt;Yes, I am still the maintainer of the free version you see here.&lt;/p&gt;

&lt;p&gt;The bits of Brakeman owned by Brakeman, Inc. were &lt;a href=&quot;https://brakemanpro.com/2018/06/28/brakeman-pro-acquired-by-synopsys&quot;&gt;sold to Synopsys&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;will-brakeman-ever-support-other-languagesframeworks&quot;&gt;Will Brakeman ever support other languages/frameworks?&lt;/h3&gt;

&lt;p&gt;Almost certainly not. It is very tailored to Ruby and Rails and I don’t have time or energy to build another static analysis engine from scratch!&lt;/p&gt;

&lt;h3 id=&quot;can-i-see-a-picture-of-you-presenting-brakeman-in-public-for-the-very-first-time&quot;&gt;Can I see a picture of you presenting Brakeman in public for the very first time?&lt;/h3&gt;

&lt;p&gt;Sure, here you go:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Justin_LARuby_October_2010.jpeg&quot; alt=&quot;Justin Collins presenting at LA Ruby Meetup October 2010&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;thats-nice-but-what-about-blurry-video-of-the-first-conference-talk-about-brakeman&quot;&gt;That’s nice but what about blurry video of the first &lt;em&gt;conference&lt;/em&gt; talk about Brakeman?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://vimeo.com/32696936&quot;&gt;No problem!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;okay-but-what-i-really-want-is-a-sweet-brakeman-sticker&quot;&gt;Okay but what I really want is a sweet Brakeman sticker.&lt;/h3&gt;

&lt;p&gt;Oh, one of these special edition ones?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/brakeman_metal_sticker.jpg&quot; alt=&quot;Metallic Brakeman Sticker&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Email your name and physical address to stickers@brakeman.org.&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;

&lt;p&gt;Next is Brakeman 5.0! It would have been nice to have a release coincide with this anniversary, but alas that is way too hard to manage. No promises, but if all goes well 5.0 will be released in September.&lt;/p&gt;

&lt;p&gt;As long as Rails continues to hang on as a solid option for many companies and individuals, I expect to continue maintaining Brakeman. The project means a lot to me and it’s a privilege and responsibility I take very seriously.&lt;/p&gt;

&lt;p&gt;We’ll see what happens in the next ten years!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hi! Justin Collins here with a rare non-release-related Brakeman post.</summary></entry><entry><title type="html">Brakeman 4.9.0 Released</title><link href="https://brakemanscanner.org/blog/2020/08/04/brakeman-4-dot-9-dot-0-released" rel="alternate" type="text/html" title="Brakeman 4.9.0 Released" /><published>2020-08-04T11:30:00-07:00</published><updated>2020-08-04T11:30:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/08/04/brakeman-4-dot-9-dot-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/08/04/brakeman-4-dot-9-dot-0-released">&lt;p&gt;It’s been a while! This will (probably) be the last minor release before &lt;strong&gt;5.0&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.8.2:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--ensure-ignore-notes&lt;/code&gt; (&lt;a href=&quot;https://github.com/eliblock&quot;&gt;Eli Block&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add check for user input in &lt;code class=&quot;highlighter-rouge&quot;&gt;ERB.new&lt;/code&gt; (&lt;a href=&quot;https://github.com/mhickman&quot;&gt;Matt Hickman&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add check for CVE-2020-8166 (&lt;a href=&quot;https://github.com/chair6&quot;&gt;Jamie Finnigan&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Always scan &lt;code class=&quot;highlighter-rouge&quot;&gt;environment.rb&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Avoid warning when &lt;code class=&quot;highlighter-rouge&quot;&gt;safe_yaml&lt;/code&gt; is used via &lt;code class=&quot;highlighter-rouge&quot;&gt;YAML.load(..., safe: true)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Do not warn about mass assignment with &lt;code class=&quot;highlighter-rouge&quot;&gt;params.permit!.slice&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;params.permit!&lt;/code&gt; in path helpers&lt;/li&gt;
  &lt;li&gt;Treat &lt;code class=&quot;highlighter-rouge&quot;&gt;Dir.glob&lt;/code&gt; as safe source of values in guards&lt;/li&gt;
  &lt;li&gt;Remove whitelist/blacklist language, add clarifications&lt;/li&gt;
  &lt;li&gt;Add “full call” information to call index results&lt;/li&gt;
  &lt;li&gt;Updated Slim dependency (&lt;a href=&quot;https://github.com/JeremiahChurch&quot;&gt;Jeremiah Church&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ensuring-notes-are-added-for-ignored-warnings&quot;&gt;Ensuring Notes Are Added For Ignored Warnings&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eliblock&quot;&gt;Eli Block&lt;/a&gt; has added a new option to ensure all ignored warnings have notes.&lt;/p&gt;

&lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;--ensure-ignore-notes&lt;/code&gt; is set and the configured “ignore” file does not have notes for all warnings, a non-zero exit code will be set.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;check-for-template-injection&quot;&gt;Check for Template Injection&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mhickman&quot;&gt;Matt Hickman&lt;/a&gt; added a new check for user input in calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;ERB.new&lt;/code&gt; which can lead to remote code execution.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1395&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;check-for-cve-2020-8166&quot;&gt;Check for CVE-2020-8166&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chair6&quot;&gt;Jamie Finnigan&lt;/a&gt; added a new check for &lt;a href=&quot;https://groups.google.com/g/rubyonrails-security/c/NOjKiGeXUgw&quot;&gt;CVE-2020-8166&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note, in general you should not rely on Brakeman for vulnerable dependency checks. There are much better tools available now!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1493&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;always-scan-environment&quot;&gt;Always Scan Environment&lt;/h3&gt;

&lt;p&gt;Brakeman used to conditionally scan &lt;code class=&quot;highlighter-rouge&quot;&gt;config/environment.rb&lt;/code&gt; based on the Rails version, since in newer versions there’s nothing of interest in that file.&lt;/p&gt;

&lt;p&gt;However, some applications do use that file for important constant definitions. Since there is no harm in doing so, Brakeman will now always scan &lt;code class=&quot;highlighter-rouge&quot;&gt;config/environment.rb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1480&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-safe-yaml&quot;&gt;More Safe YAML&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about deserialization if the &lt;a href=&quot;https://rubygems.org/gems/safe_yaml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;safe_yaml&lt;/code&gt;&lt;/a&gt; gem is used with &lt;code class=&quot;highlighter-rouge&quot;&gt;YAML.load(..., safe: true)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1496&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;mass-assignment-false-positives&quot;&gt;Mass Assignment False Positives&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about mass assignment with &lt;code class=&quot;highlighter-rouge&quot;&gt;params.permit!.slice&lt;/code&gt; or when &lt;code class=&quot;highlighter-rouge&quot;&gt;params.permit!&lt;/code&gt; is used as an argument to a path helper (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;something_path(params.permit!)&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1485&quot;&gt;changes&lt;/a&gt; and &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1484&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;dirglob-in-guards&quot;&gt;Dir.glob in Guards&lt;/h3&gt;

&lt;p&gt;Brakeman will now consider &lt;code class=&quot;highlighter-rouge&quot;&gt;Dir.glob&lt;/code&gt; to be a safe source of values in guard statements.&lt;/p&gt;

&lt;p&gt;In other words, code like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/some/template/path/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Guard condition using Dir.glob results&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/groups'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Will not warn because we are checking `files` for `params[:template]` above&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;groups/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1481&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;updated-warning-messages&quot;&gt;Updated Warning Messages&lt;/h3&gt;

&lt;p&gt;Updated a few warning messages to be clearer instead of just using ‘whitelist’/’blacklist’ as a verb.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1486&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3afcfee962907361cbc5047b7089eaa7c31546cc4de201939faba6d3a1b07a18  brakeman-4.9.0.gem
dc6a50321170e83e61ae75d1bb2dade53392a44b614d4068553f1425539a3b8f  brakeman-lib-4.9.0.gem
4c8ea640925bf33a775729b000b91312abe42ea7945dac1a6bfcc0347fb6323d  brakeman-min-4.9.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">It’s been a while! This will (probably) be the last minor release before 5.0.</summary></entry><entry><title type="html">Brakeman 4.8.2 Released</title><link href="https://brakemanscanner.org/blog/2020/05/12/brakeman-4-dot-8-dot-2-released" rel="alternate" type="text/html" title="Brakeman 4.8.2 Released" /><published>2020-05-12T16:00:00-07:00</published><updated>2020-05-12T16:00:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/05/12/brakeman-4-dot-8-dot-2-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/05/12/brakeman-4-dot-8-dot-2-released">&lt;p&gt;This release introduces a new option and two new checks!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.8.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--text-fields&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Add check for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/CFRVkEytdP8/c5gmICECAgAJ&quot;&gt;CVE-2020-8159&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Add check for escaping HTML entities in JSON configuration option&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;authenticate_or_request_with_http_basic&lt;/code&gt; check for passed blocks (&lt;a href=&quot;https://github.com/hugocorbucci&quot;&gt;Hugo Corbucci&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;text-fields-option&quot;&gt;Text Fields Option&lt;/h3&gt;

&lt;p&gt;It is now possible to specify which text fields are reported and their order for the default “text” report format using the &lt;code class=&quot;highlighter-rouge&quot;&gt;--text-fields&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;Possible options are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;all&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;category&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;category_id&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;check&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;confidence&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fingerprint&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;link&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;render_path&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--text-fields&lt;/code&gt; accepts a comma-separated list of these options.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please keep in mind the JSON report should be used for structured reports/parsing.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1473&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;cve-2020-8159&quot;&gt;CVE-2020-8159&lt;/h3&gt;

&lt;p&gt;This release includes a check for &lt;a href=&quot;ihttps://groups.google.com/d/msg/rubyonrails-security/CFRVkEytdP8/c5gmICECAgAJ&quot;&gt;CVE-2020-8159&lt;/a&gt; related to the &lt;code class=&quot;highlighter-rouge&quot;&gt;actionpack-page_caching&lt;/code&gt; gem.
The vulnerability allows arbitrary file writing and may be escalated to remote code execution.&lt;/p&gt;

&lt;p&gt;If &lt;code class=&quot;highlighter-rouge&quot;&gt;caches_page&lt;/code&gt; is called in any controllers, this will be a High confidence warning. Otherwise, Weak.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Reminder: Brakeman is not a ‘dependency’ scanner. It only includes checks for a small number of Rails-related CVEs. Use bundler-audit or related tools for dependency checking.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1477/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;json-escaping-configuration&quot;&gt;JSON Escaping Configuration&lt;/h3&gt;

&lt;p&gt;Brakeman will now warn if HTML entity escaping in JSON is disabled globally with &lt;code class=&quot;highlighter-rouge&quot;&gt;ActiveSupport.escape_html_entities_in_json = false&lt;/code&gt;. This is an unusual configuration.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1472&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;basic-auth-check-fix&quot;&gt;Basic Auth Check Fix&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hugocorbucci&quot;&gt;Hugo Corbucci&lt;/a&gt; fixed an error when checking calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;authenticate_or_request_with_http_basic&lt;/code&gt; without a block literal.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1478&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d7bf369896b4a3c41778f39f10b1e1d0844a965bbb582fa0a0566b1df4f07dec  brakeman-4.8.2.gem
c13e9a9e5b213ba95a16803ddb50eb3c7119533ca71444ffec2bb6cea22b926a  brakeman-lib-4.8.2.gem
a422a444b7db48682e1f112c83b1a7a7e3828ec02d52ed91c5b3eff235b801c1  brakeman-min-4.8.2.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release introduces a new option and two new checks!</summary></entry><entry><title type="html">Brakeman 4.8.1 Released</title><link href="https://brakemanscanner.org/blog/2020/04/06/brakeman-4-dot-8-dot-1-released" rel="alternate" type="text/html" title="Brakeman 4.8.1 Released" /><published>2020-04-06T10:00:00-07:00</published><updated>2020-04-06T10:00:00-07:00</updated><id>https://brakemanscanner.org/blog/2020/04/06/brakeman-4-dot-8-dot-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/04/06/brakeman-4-dot-8-dot-1-released">&lt;p&gt;Just a little bug fix release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.8.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Warn about global(!) mass assignment&lt;/li&gt;
  &lt;li&gt;Check SQL query strings using &lt;code class=&quot;highlighter-rouge&quot;&gt;String#strip&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;String.squish&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1469&quot;&gt;#1459&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle non-symbol keys in &lt;code class=&quot;highlighter-rouge&quot;&gt;locals&lt;/code&gt; hash for &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1465&quot;&gt;#1465&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Index calls in render arguments (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1459&quot;&gt;#1459&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;global-mass-assignment&quot;&gt;Global Mass Assignment&lt;/h3&gt;

&lt;p&gt;Strong parameters can be disabled with:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit_all_parameters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Brakeman will now warn about this (very rare) configuration.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1464&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;squished-and-stripped-sql&quot;&gt;Squished and Stripped SQL&lt;/h3&gt;

&lt;p&gt;Brakeman will now check string targets of &lt;code class=&quot;highlighter-rouge&quot;&gt;squish&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;strip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;squish&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1470&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;non-symbol-keys-in-locals-hash&quot;&gt;Non-Symbol Keys in Locals Hash&lt;/h3&gt;

&lt;p&gt;Using a value other than symbol literals as keys in the &lt;code class=&quot;highlighter-rouge&quot;&gt;locals&lt;/code&gt; hash for &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; will no longer cause an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1468&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;render-arguments&quot;&gt;Render Arguments&lt;/h3&gt;

&lt;p&gt;Calls made as arguments to &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; will be indexed and checked for all vulnerability types, like every other method call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1460&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5f3cc763fce471434adc33aa251298fa24ea2a1c01ef2549aec55be4b5b14d46  brakeman-4.8.1.gem
c4a95b450fb7ec2440e68640a0821e3a6b62ea34f665e78264ba0b332e98e5df  brakeman-lib-4.8.1.gem
ada41dbfc3a436c062cd44161893249654caf43296801599303952f6261f2e5e  brakeman-min-4.8.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">Just a little bug fix release.</summary></entry><entry><title type="html">Brakeman 4.8.0 Released</title><link href="https://brakemanscanner.org/blog/2020/02/18/brakeman-4-dot-8-dot-0-released" rel="alternate" type="text/html" title="Brakeman 4.8.0 Released" /><published>2020-02-18T10:00:00-08:00</published><updated>2020-02-18T10:00:00-08:00</updated><id>https://brakemanscanner.org/blog/2020/02/18/brakeman-4-dot-8-dot-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2020/02/18/brakeman-4-dot-8-dot-0-released">&lt;p&gt;First release of 2020!
This release comes with a brand new report format: JUnit XML.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.7.2:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add JUnit XML report format (&lt;a href=&quot;https://github.com/naokikimura&quot;&gt;Naoki Kimurai&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Sort ignore files by fingerprint and line (&lt;a href=&quot;https://github.com/ngan&quot;&gt;Ngan Pham&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Catch dangerous concatenation in &lt;code class=&quot;highlighter-rouge&quot;&gt;CheckExecute&lt;/code&gt; (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;User-friendly message when ignore config file has invalid JSON (&lt;a href=&quot;https://github.com/deevis&quot;&gt;D. Hicks&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Freeze call index results, fix thread-safety issue&lt;/li&gt;
  &lt;li&gt;Properly render confidence in Markdown report (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1446&quot;&gt;#1446&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Report old warnings as fixed if zero warnings reported&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;junit-xml-report&quot;&gt;JUnit XML Report&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/naokikimura&quot;&gt;Naoki Kimura&lt;/a&gt;, Brakeman can now generate a JUnit XML format.
JUnit XML is produced and consumed by a number of different testing tools, including CircleCI.&lt;/p&gt;

&lt;p&gt;Supporting this format makes it possible for Brakeman warnings to be consumed by general test infrastructure tools.&lt;/p&gt;

&lt;p&gt;To use the new format, either use &lt;code class=&quot;highlighter-rouge&quot;&gt;-f junit&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-o report.junit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1453&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sort-ignore-files&quot;&gt;Sort Ignore Files&lt;/h3&gt;

&lt;p&gt;Warnings in “ignore files” were previously only sorted by fingerprint.
Thanks to &lt;a href=&quot;https://github.com/ngan&quot;&gt;Ngan Pham&lt;/a&gt; they are now sorted by fingerprint then line number, to maintain stable ordering between warnings with the same fingerprint.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1457&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;dangerous-concatenation-in-commands&quot;&gt;Dangerous Concatenation in Commands&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt; has updated the command injection check (&lt;code class=&quot;highlighter-rouge&quot;&gt;CheckExecute&lt;/code&gt;) to also consider string concatenation with dangerous values.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;system(&quot;ls &quot; + maybe_dangerous)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1440&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;fix-thread-safety-issue&quot;&gt;Fix Thread-safety Issue&lt;/h3&gt;

&lt;p&gt;Two checks were modifying shared data (call site results), which introduced a race condition.
Sometimes a result would strangely become &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; and cause intermittent errors.
Note this only popped up when using real threads on JRuby.&lt;/p&gt;

&lt;p&gt;Now results from the &lt;code class=&quot;highlighter-rouge&quot;&gt;CallIndex&lt;/code&gt; are frozen to help prevent this kind of modification of shared data in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1452&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;render-confidence-in-markdown&quot;&gt;Render Confidence in Markdown&lt;/h3&gt;

&lt;p&gt;Due to a previous refactoring, confidence levels were not being rendered in Markdown reports.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1448&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;report-comparison-fix&quot;&gt;Report Comparison Fix&lt;/h3&gt;

&lt;p&gt;Due to a &lt;em&gt;very&lt;/em&gt; old bug, when comparing an old report with some warnings to a new report with zero warnings, the old warnings were not reported as fixed.
Now they will be.&lt;/p&gt;

&lt;p&gt;Probably no one noticed because we generally only care about &lt;em&gt;new&lt;/em&gt; warnings.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1448&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2febb3ce4111fe14f57a8ea447c5770eeb32ba43333955b4ed27864ef045c277  brakeman-4.8.0.gem
c513373a37576d8107af724bf9f8a47e8d76253c85bdd6fdb4d3e93471a47ee6  brakeman-lib-4.8.0.gem
d82206b9a60ef1eb4c96d32ba0157774db301e3ca10dcbdd7b4171044b28eccf  brakeman-min-4.8.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">First release of 2020! This release comes with a brand new report format: JUnit XML.</summary></entry><entry><title type="html">Brakeman 4.7.2 Released</title><link href="https://brakemanscanner.org/blog/2019/11/25/brakeman-4-dot-7-dot-2-released" rel="alternate" type="text/html" title="Brakeman 4.7.2 Released" /><published>2019-11-25T14:00:00-08:00</published><updated>2019-11-25T14:00:00-08:00</updated><id>https://brakemanscanner.org/blog/2019/11/25/brakeman-4-dot-7-dot-2-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2019/11/25/brakeman-4-dot-7-dot-2-released">&lt;p&gt;Some minor fixes for a minor release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.7.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;request.params&lt;/code&gt; as query parameters (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1398&quot;&gt;#1398&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle more &lt;code class=&quot;highlighter-rouge&quot;&gt;permit!&lt;/code&gt; cases (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1426&quot;&gt;#1426&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Remove version guard for &lt;code class=&quot;highlighter-rouge&quot;&gt;named_scope&lt;/code&gt; vs. &lt;code class=&quot;highlighter-rouge&quot;&gt;scope&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Find SQL injection in &lt;code class=&quot;highlighter-rouge&quot;&gt;String#strip_heredoc&lt;/code&gt; target (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1433&quot;&gt;#1433&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ensure file name is set when processing models&lt;/li&gt;
  &lt;li&gt;Bundle &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby_parser&lt;/code&gt; version 3.14.1 (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1429&quot;&gt;#1429&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;more-query-parameters&quot;&gt;More Query Parameters&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request.params&lt;/code&gt; has been added as a query parameters method.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1423&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-permit&quot;&gt;More &lt;code class=&quot;highlighter-rouge&quot;&gt;permit!&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;More cases of &lt;code class=&quot;highlighter-rouge&quot;&gt;permit!&lt;/code&gt; will be identified, particularly when it is the target of a method call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1427&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-scopes&quot;&gt;More Scopes&lt;/h3&gt;

&lt;p&gt;Both &lt;code class=&quot;highlighter-rouge&quot;&gt;named_scope&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;scope&lt;/code&gt; will be handled regardless of detected Rails version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1435&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;sql-injection-with-strip_heredoc&quot;&gt;SQL Injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;strip_heredoc&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;strip_heredoc&lt;/code&gt; is now treated as returning a string.
This fixes false positives if the target is a plain string and fixes false negatives if the target has interpolation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1434&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;model-file-names&quot;&gt;Model File Names&lt;/h3&gt;

&lt;p&gt;In some cases, warnings were missing file names because the file name was not being passed to the model processor.&lt;/p&gt;

&lt;p&gt;The file name will now be passed along, and there is a new test in the test suite for file names on warnings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1431&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;339d6f3707a2c0a32003536a231255b839a0b87bd6a7ebef3c82aedd1bdd3ac8  brakeman-4.7.2.gem
39ce3a5fe248dee8c78fe671441d2abbfec66cec923ee9f56c62018229d3c9b0  brakeman-lib-4.7.2.gem
efa07aa8476ef5553c91734093349a3ed55e2ef05b469d3dcecfdaabede37296  brakeman-min-4.7.2.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">Some minor fixes for a minor release.</summary></entry><entry><title type="html">Brakeman 4.7.0 Released</title><link href="https://brakemanscanner.org/blog/2019/10/14/brakeman-4-dot-7-released" rel="alternate" type="text/html" title="Brakeman 4.7.0 Released" /><published>2019-10-14T16:00:00-07:00</published><updated>2019-10-14T16:00:00-07:00</updated><id>https://brakemanscanner.org/blog/2019/10/14/brakeman-4-dot-7-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2019/10/14/brakeman-4-dot-7-released">&lt;p&gt;This release updates Haml support to Haml 5.x!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.6.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Update Haml support to Haml 5.x (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1044&quot;&gt;#1044&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Catch shell injection from &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; shell commands (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Correctly handle non-symbols in &lt;code class=&quot;highlighter-rouge&quot;&gt;CheckCookieSerialization&lt;/code&gt; (&lt;a href=&quot;https://github.com/philipturnbull&quot;&gt;Phil Turnbull&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Refactor &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::Differ#second_pass&lt;/code&gt; (&lt;a href=&quot;https://github.com/Becojo&quot;&gt;Benoit Côté-Jodoin&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;version_between?&lt;/code&gt; (&lt;a href=&quot;https://github.com/aglushkov&quot;&gt;Andrey Glushkov&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore interpolation in &lt;code class=&quot;highlighter-rouge&quot;&gt;%W[]&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1399&quot;&gt;#1399&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;form_for&lt;/code&gt; for XSS check&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;haml-support-update&quot;&gt;Haml Support Update&lt;/h3&gt;

&lt;p&gt;Haml 5 introduced a completely different “compiled” format, so adding support was a significant effort taking a few months to complete.
Due to the large number of changes, you may expect some changes to warnings for Haml templates.&lt;/p&gt;

&lt;p&gt;Please report any bugs or odd behavior with Haml templates!&lt;/p&gt;

&lt;p&gt;Haml 3.x and 4.x are no longer supported, although in general Haml is mostly backwards-compatible.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1397&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;shell-commands&quot;&gt;Shell Commands&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt; added support for detecting command injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; in known-dangerous commands (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;An example of dangerous code would be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;system(&quot;echo&quot;, &quot;-c&quot;, params[:command])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course not all dangerous shell commands are covered - so in general be careful passing any user-controlled input to a shell command.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1396/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;cookieserialization-bug&quot;&gt;CookieSerialization Bug&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/philipturnbull&quot;&gt;Phil Turnbull&lt;/a&gt; fixed an issue in &lt;code class=&quot;highlighter-rouge&quot;&gt;CheckCookieSerialization&lt;/code&gt; where non-symbol cookie serialization options were handled poorly.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1391&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;brakemandiffer-refactor&quot;&gt;Brakeman::Differ Refactor&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Becojo&quot;&gt;Benoit Côté-Jodoin&lt;/a&gt; refactored &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::Differ&lt;/code&gt; to compare warnings more efficiently and remove old fallback behavior.
All warnings are compared by fingerprint now when using &lt;code class=&quot;highlighter-rouge&quot;&gt;--compare&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1406&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;version-comparisons&quot;&gt;Version Comparisons&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aglushkov&quot;&gt;Andrey Glushkov&lt;/a&gt; updated the code for comparing library versions so it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;Gem::Version&lt;/code&gt; and handles “beta”/pre-release versions better.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1405&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;w-interpolation&quot;&gt;%W Interpolation&lt;/h3&gt;

&lt;p&gt;String interpolation when using &lt;code class=&quot;highlighter-rouge&quot;&gt;%W&lt;/code&gt; is no longer considered dangerous in shell commands where regular interpolation would be.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1408&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;form_for&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;form_for&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;form_for&lt;/code&gt; is considered a safe method in XSS checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1397/commits/a99cb25c6e76eb6240589f3a399e1245c0514257&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;stringnew&quot;&gt;String.new&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;String.new &amp;lt;&amp;lt; 'some string'&lt;/code&gt; is now treated like &lt;code class=&quot;highlighter-rouge&quot;&gt;'' &amp;lt;&amp;lt; 'some string'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1397/commits/931bed18481679086a7102bc063ecf9b1d727d40&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;f43d949f1de9c0bb67b7bc7d41000ac70a1fb6c2250c5e7332015f0cc5ce36c5  brakeman-4.7.0.gem
c02dbaa4ad0c7402ef99697c7b1916b7d9558dd5aa45e1a36efed117628498cc  brakeman-lib-4.7.0.gem
3ab80a47bbfbb0f869bb1289292ed62b9643b5e0884a4a79e2c7e44218ce3b07  brakeman-min-4.7.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release updates Haml support to Haml 5.x!</summary></entry></feed>